[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 10
[SQL STATEMENT]: select +9999999999999999999,-9999999999999999999;
[EXPECT RESULT]:
9999999999999999999	-9999999999999999999
9999999999999999999	-9999999999999999999
[ACTUAL RESULT]:
+9999999999999999999	-9999999999999999999
-8446744073709551617	8446744073709551617

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 11
[SQL STATEMENT]: select cast(9223372036854775808 as unsigned)+1;
[EXPECT RESULT]:
cast(9223372036854775808 as unsigned)+1
9223372036854775809
[ACTUAL RESULT]:
cast(9223372036854775808 as unsigned unsigned) + 1
9.223372036854776E18

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 12
[SQL STATEMENT]: select 9223372036854775808+1;
[EXPECT RESULT]:
9223372036854775808 + 1
9223372036854775809
[ACTUAL RESULT]:
9223372036854775808 + 1
-9223372036854775807

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 13
[SQL STATEMENT]: select -(0-3),round(-(0-3)), round(9999999999999999999);
[EXPECT RESULT]:
-(0 - 3)	round(-(0 - 3))	round(9999999999999999999)
3	3	9999999999999999999
[ACTUAL RESULT]:
-(0 - 3)	round(-(0 - 3))	round(9999999999999999999)
3	3	-8446744073709551617

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 14
[SQL STATEMENT]: select 1,11,101,1001,10001,100001,1000001,10000001,100000001,1000000001,10000000001,100000000001,1000000000001,10000000000001,100000000000001,1000000000000001,10000000000000001,100000000000000001,1000000000000000001,10000000000000000001;
[EXPECT RESULT]:
1	11	101	1001	10001	100001	1000001	10000001	100000001	1000000001	10000000001	100000000001	1000000000001	10000000000001	100000000000001	1000000000000001	10000000000000001	100000000000000001	1000000000000000001	10000000000000000001
1	11	101	1001	10001	100001	1000001	10000001	100000001	1000000001	10000000001	100000000001	1000000000001	10000000000001	100000000000001	1000000000000001	10000000000000001	100000000000000001	1000000000000000001	10000000000000000001
[ACTUAL RESULT]:
1	11	101	1001	10001	100001	1000001	10000001	100000001	1000000001	10000000001	100000000001	1000000000001	10000000000001	100000000000001	1000000000000001	10000000000000001	100000000000000001	1000000000000000001	10000000000000000001
1	11	101	1001	10001	100001	1000001	10000001	100000001	1000000001	10000000001	100000000001	1000000000001	10000000000001	100000000000001	1000000000000001	10000000000000001	100000000000000001	1000000000000000001	-8446744073709551615

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 15
[SQL STATEMENT]: select -1,-11,-101,-1001,-10001,-100001,-1000001,-10000001,-100000001,-1000000001,-10000000001,-100000000001,-1000000000001,-10000000000001,-100000000000001,-1000000000000001,-10000000000000001,-100000000000000001,-1000000000000000001,-10000000000000000001;
[EXPECT RESULT]:
-1	-11	-101	-1001	-10001	-100001	-1000001	-10000001	-100000001	-1000000001	-10000000001	-100000000001	-1000000000001	-10000000000001	-100000000000001	-1000000000000001	-10000000000000001	-100000000000000001	-1000000000000000001	-10000000000000000001
-1	-11	-101	-1001	-10001	-100001	-1000001	-10000001	-100000001	-1000000001	-10000000001	-100000000001	-1000000000001	-10000000000001	-100000000000001	-1000000000000001	-10000000000000001	-100000000000000001	-1000000000000000001	-10000000000000000001
[ACTUAL RESULT]:
-1	-11	-101	-1001	-10001	-100001	-1000001	-10000001	-100000001	-1000000001	-10000000001	-100000000001	-1000000000001	-10000000000001	-100000000000001	-1000000000000001	-10000000000000001	-100000000000000001	-1000000000000000001	-10000000000000000001
-1	-11	-101	-1001	-10001	-100001	-1000001	-10000001	-100000001	-1000000001	-10000000001	-100000000001	-1000000000001	-10000000000001	-100000000000001	-1000000000000001	-10000000000000001	-100000000000000001	-1000000000000000001	8446744073709551615

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 21
[SQL STATEMENT]: select * from t1 where a=18446744073709551615;
[EXPECT RESULT]:
a
18446744073709551615
[ACTUAL RESULT]:
a

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 24
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a
18446744073709551612
18446744073709551613
18446744073709551614
[ACTUAL RESULT]:
a
18446744073709551615
18446744073709551614
18446744073709551613
18446744073709551612

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 38
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1;
[EXPECT RESULT]:
min(big)	max(big)	max(big) - 1
0	18446744073709551615	18446744073709551614
[ACTUAL RESULT]:
min(big)	max(big)	max(big) - 1
0	18446744073709551615	1.8446744073709552E19

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 39
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1 group by a;
[EXPECT RESULT]:
min(big)	max(big)	max(big) - 1
0	18446744073709551615	18446744073709551614
[ACTUAL RESULT]:
min(big)	max(big)	max(big) - 1
0	18446744073709551615	1.8446744073709552E19

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 66
[SQL STATEMENT]: select * from t1 join t2 on t1.value64=t2.value64 where t1.value64=17156792991891826145;
[EXPECT RESULT]:
value64	value32	value64	value32
17156792991891826145	1	17156792991891826145	3
[ACTUAL RESULT]:
value64	value32	value64	value32

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 75
[SQL STATEMENT]: select * from t1 where bigint_col=17666000000000000000;
[EXPECT RESULT]:
bigint_col
17666000000000000000
[ACTUAL RESULT]:
bigint_col

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 76
[SQL STATEMENT]: select * from t1 where bigint_col='17666000000000000000';
[EXPECT RESULT]:
bigint_col
17666000000000000000
[ACTUAL RESULT]:
Operator '=' with parameters [BIGINT UNSIGNED VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 80
[SQL STATEMENT]: select cast(10000002383263201056 as unsigned) mod 50 as result;
[EXPECT RESULT]:
result
6
[ACTUAL RESULT]:
result
30.0

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 81
[SQL STATEMENT]: select cast(19999999999999999999 as signed);
[EXPECT RESULT]:
cast(19999999999999999999 as signed)
9223372036854775807
[ACTUAL RESULT]:
strconv.ParseInt: parsing "19999999999999999999": value out of range

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 82
[SQL STATEMENT]: select cast(-19999999999999999999 as signed);
[EXPECT RESULT]:
cast(-19999999999999999999 as signed)
-9223372036854775808
[ACTUAL RESULT]:
Operator 'unary_minus' with parameters [VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 90
[SQL STATEMENT]: insert INTO t1 (id,a) VALUES
(1,0),
(2,CAST(0x7FFFFFFFFFFFFFFF AS UNSIGNED)),
(3,CAST(0x8000000000000000 AS UNSIGNED)),
(4,CAST(0xFFFFFFFFFFFFFFFF AS UNSIGNED));
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Function expression in INSERT statement value list will be supported in future version. for column 'a' at row 1

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 93
[SQL STATEMENT]: select * from t1 where ((a = 18446744073709551615) and (b = '18446744073709551615')) order by a asc;
[EXPECT RESULT]:
id	a	b
4	18446744073709551615	18446744073709551615
[ACTUAL RESULT]:
id	a	b

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 105
[SQL STATEMENT]: SELECT * from t_bigint WHERE id = '1.1';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [BIGINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 106
[SQL STATEMENT]: SELECT * from t_bigint WHERE id = '1.1e0';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [BIGINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 109
[SQL STATEMENT]: SELECT * from t_bigint WHERE id IN ('1.1', '2.2');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [BIGINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 110
[SQL STATEMENT]: SELECT * from t_bigint WHERE id IN ('1.1e0', '2.2e0');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [BIGINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 113
[SQL STATEMENT]: SELECT * from t_bigint WHERE id BETWEEN '1.1' AND '1.9';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [BIGINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 114
[SQL STATEMENT]: SELECT * from t_bigint WHERE id BETWEEN '1.1e0' AND '1.9e0';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [BIGINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 118
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) BETWEEN 0 and 0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 119
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)=0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 120
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in (0.8,0.9);
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 130
[SQL STATEMENT]: select count(*) from t
where id>=8894754949779693574 and id =17790886498483827171 order by 1 asc;
[EXPECT RESULT]:
count(*)
1
[ACTUAL RESULT]:
count(*)
0

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 132
[SQL STATEMENT]: select count(*) from t
where id between 8894754949779693574 and 17790886498483827171;
[EXPECT RESULT]:
count(*)
3
[ACTUAL RESULT]:
count(*)
0

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 144
[SQL STATEMENT]: SELECT ( -1 BETWEEN 9223372036854775808 AND 1 );
[EXPECT RESULT]:
( -1 BETWEEN 9223372036854775808 AND 1 )
false
[ACTUAL RESULT]:
-1 between 9223372036854775808 and 1
true

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 145
[SQL STATEMENT]: SELECT ( 0 BETWEEN 9223372036854775808 AND 1 );
[EXPECT RESULT]:
( 0 BETWEEN 9223372036854775808 AND 1 )
false
[ACTUAL RESULT]:
0 between 9223372036854775808 and 1
true

[ERROR]
[SCRIPT   FILE]: cases/dtype/bigint.test
[ROW    NUMBER]: 146
[SQL STATEMENT]: SELECT ( 1 BETWEEN 9223372036854775808 AND 1 );
[EXPECT RESULT]:
( 1 BETWEEN 9223372036854775808 AND 1 )
false
[ACTUAL RESULT]:
1 between 9223372036854775808 and 1
true

[ERROR]
[SCRIPT   FILE]: cases/dtype/bool.test
[ROW    NUMBER]: 11
[SQL STATEMENT]: SELECT * FROM t1 WHERE IF(a AND 1, 0, 1);
[EXPECT RESULT]:
a	b
false	true
false	false
null	null
[ACTUAL RESULT]:
Only bool expression can be used as filter condition.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bool.test
[ROW    NUMBER]: 12
[SQL STATEMENT]: SELECT * FROM t1 WHERE IF(1 AND a, 0, 1);
[EXPECT RESULT]:
a	b
false	true
false	false
null	null
[ACTUAL RESULT]:
Only bool expression can be used as filter condition.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bool.test
[ROW    NUMBER]: 39
[SQL STATEMENT]: select * from t2 where a<1 AND NOT b order by b desc;
[EXPECT RESULT]:
a	b
[ACTUAL RESULT]:
Operator 'not' with parameters [INT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bool.test
[ROW    NUMBER]: 44
[SQL STATEMENT]: select t1.a,t2.b from t1 join t2 on t1.a=t2.a order by t1.a desc;
[EXPECT RESULT]:
a	b
true	2
true	2
[ACTUAL RESULT]:
Operator '=' with parameters [BOOL INT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bool.test
[ROW    NUMBER]: 46
[SQL STATEMENT]: select a,any_value(b) from t1 group by a order by a asc;
[EXPECT RESULT]:
a	any_value(b)
false   true
null    null
true    false
[ACTUAL RESULT]:
a	any_value(b)
false	true
null	null
true	false

[ERROR]
[SCRIPT   FILE]: cases/dtype/bool.test
[ROW    NUMBER]: 54
[SQL STATEMENT]: update t1 set a=false where b is null;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator 'cast' with parameters [BOOL BOOL] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/bool.test
[ROW    NUMBER]: 56
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
true	false	
true	true
[ACTUAL RESULT]:
a	b
true	false
true	true
null	null

[ERROR]
[SCRIPT   FILE]: cases/dtype/bool.test
[ROW    NUMBER]: 58
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
true	false
[ACTUAL RESULT]:
a	b
true	false
null	null

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 9
[SQL STATEMENT]: SELECT CONCAT_WS(2,' test');
[EXPECT RESULT]:
CONCAT_WS(2,' test')
2 test
[ACTUAL RESULT]:
Function 'concat_ws' with parameters [BIGINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 11
[SQL STATEMENT]: SELECT '9223372036854775807' = 9223372036854775807;
[EXPECT RESULT]:
'9223372036854775807' = 9223372036854775807
true
[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 13
[SQL STATEMENT]: SELECT CAST('9223372036854775807' AS UNSIGNED) = 9223372036854775806;
[EXPECT RESULT]:
CAST('9223372036854775807' AS UNSIGNED) = 9223372036854775806
false
[ACTUAL RESULT]:
cast(9223372036854775807 as unsigned unsigned) = 9223372036854775806
true

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 18
[SQL STATEMENT]: SELECT CONCAT_WS('My', NULL, 'QL');
[EXPECT RESULT]:
CONCAT_WS('My', NULL, 'QL')
null
[ACTUAL RESULT]:
concat_ws(My, null, QL)
QL

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 19
[SQL STATEMENT]: SELECT CONCAT_WS(14,'.3');
[EXPECT RESULT]:
CONCAT_WS(14,'.3')
14.3
[ACTUAL RESULT]:
Function 'concat_ws' with parameters [BIGINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 52
[SQL STATEMENT]: select concat_ws(LastName,FirstName) from Demochar where Age > 40 order by 1 asc;
[EXPECT RESULT]:
concat_ws(LastName,FirstName)
JohnsonDavid
MartinKelly
TamburelloAndrea
[ACTUAL RESULT]:
concat_ws(lastname, firstname)
Andrea
David
Kelly

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 53
[SQL STATEMENT]: select concat_ws(LastName,FirstName) as fullname from Demochar where Age > 40 order by fullname desc;
[EXPECT RESULT]:
fullname
TamburelloAndrea
MartinKelly
JohnsonDavid
[ACTUAL RESULT]:
fullname
Kelly
David
Andrea

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 54
[SQL STATEMENT]: select concat_ws(LastName,FirstName),Gender,Age from Demochar where Gender='F' order by Age asc;
[EXPECT RESULT]:
concat_ws(LastName,FirstName)	Gender	Age
PolandCarole	F	29
RapierAbigail	F	38
TamburelloAndrea	F	45
MartinKelly	F	54
[ACTUAL RESULT]:
concat_ws(lastname, firstname)	gender	age
Carole	F	29
Abigail	F	38
Andrea	F	45
Kelly	F	54

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 56
[SQL STATEMENT]: select cast(Age as char) and Age as cAge from Demochar where Age>=50 order by cAge;
[EXPECT RESULT]:
cage
1
1
[ACTUAL RESULT]:
Operator 'and' with parameters [CHAR INT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 96
[SQL STATEMENT]: select employeeNumber,officeCode,reportsTo from employees where employeeNumber>1400 and reportsTo is not null order by officeCode+1,employeeNumber;
[EXPECT RESULT]:
employeeNumber  officeCode      reportsTo
1401    4       1102
1611    6       1088
1501    7       1102
1504    7       1102
[ACTUAL RESULT]:
Operator '+' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 114
[SQL STATEMENT]: select e.jobTitle,sum(jobid) from employees e join job j on e.jobTitle=j.jobTitle group by jobTitle having sum(jobid)>5;
[EXPECT RESULT]:
jobTitle        sum(jobid)
Sales Manager (NA)      6
Sales Rep       84
[ACTUAL RESULT]:
Column reference 'jobtitle' is ambiguous

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 115
[SQL STATEMENT]: select e.jobTitle,sum(jobid) from employees e join job j on e.jobTitle=j.jobTitle group by jobTitle having sum(jobid)>5 order by 2 desc;
[EXPECT RESULT]:
jobTitle        sum(jobid)
Sales Rep       84
Sales Manager (NA)      6
[ACTUAL RESULT]:
Column reference 'jobtitle' is ambiguous

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 148
[SQL STATEMENT]: update t1 set a=a+'101';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 149
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
103	0
105	0
107	0
109	0
111	0
113	0
115	0
117	0
119	0
121	0
123	0
124	0
125	0
127	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 152
[SQL STATEMENT]: update t1 set a=a+'a' where 1 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 154
[SQL STATEMENT]: update t1 set a=a+a where 3 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 173
[SQL STATEMENT]: delete from t1 where a=1 limit 1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 174
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
1	2
[ACTUAL RESULT]:
a	b
1	1
1	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 175
[SQL STATEMENT]: INSERT INTO t1 VALUES (1,3);
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Incorrect VARCHAR value: '1' for column 'a' at row 0

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 176
[SQL STATEMENT]: delete from t1 where a=1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 177
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
[ACTUAL RESULT]:
a	b
1	1
1	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 194
[SQL STATEMENT]: delete from t1 where a=2+2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 195
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
10	0
12	0
14	0
16	0
18	0
2	0
20	0
22	0
23	0
24	0
26	0
6	0
8	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 196
[SQL STATEMENT]: delete from t1 where  a=24;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 197
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
10	0
12	0
14	0
16	0
18	0
2	0
20	0
22	0
23	0
26	0
6	0
8	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/char.test
[ROW    NUMBER]: 199
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
10	0
12	0
14	0
16	0
18	0
2	0
20	0
22	0
23	0
26	0
6	0
8	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/datatype.test
[ROW    NUMBER]: 50
[SQL STATEMENT]: select * from t4 where b>'20211213';
[EXPECT RESULT]:
a	b	c
2	2021-12-14	2021-12-13 00:00:00
3	2021-12-14	2021-12-14 00:00:00
4	2021-12-15	2021-12-14 00:00:00
[ACTUAL RESULT]:
Operator '>' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datatype.test
[ROW    NUMBER]: 51
[SQL STATEMENT]: select * from t4 where c>'20211213';
[EXPECT RESULT]:
a	b	c
1	2021-12-13	2021-12-13 13:00:00
3	2021-12-14	2021-12-14 00:00:00
4	2021-12-15	2021-12-14 00:00:00
[ACTUAL RESULT]:
Operator '>' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datatype.test
[ROW    NUMBER]: 52
[SQL STATEMENT]: select * from t4 where b>'2021-12-13';
[EXPECT RESULT]:
a	b	c
2	2021-12-14	2021-12-13 00:00:00
3	2021-12-14	2021-12-14 00:00:00
4	2021-12-15	2021-12-14 00:00:00
[ACTUAL RESULT]:
Operator '>' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datatype.test
[ROW    NUMBER]: 53
[SQL STATEMENT]: select * from t4 where c>'2021-12-13';
[EXPECT RESULT]:
a	b	c
1	2021-12-13	2021-12-13 13:00:00
3	2021-12-14	2021-12-14 00:00:00
4	2021-12-15	2021-12-14 00:00:00
[ACTUAL RESULT]:
Operator '>' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datatype.test
[ROW    NUMBER]: 54
[SQL STATEMENT]: select * from t4 where b between '2021-12-13' and '2021-12-14';
[EXPECT RESULT]:
a	b	c
1	2021-12-13	2021-12-13 13:00:00
2	2021-12-14	2021-12-13 00:00:00
3	2021-12-14	2021-12-14 00:00:00
[ACTUAL RESULT]:
Operator '>=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datatype.test
[ROW    NUMBER]: 55
[SQL STATEMENT]: select * from t4 where b not between '2021-12-13' and '2021-12-14';
[EXPECT RESULT]:
a	b	c
4	2021-12-15	2021-12-14 00:00:00
[ACTUAL RESULT]:
Operator '<' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 7
[SQL STATEMENT]: select cast('0000-01-01' as date),cast('0000-01-01' as date)-1;
[EXPECT RESULT]:
cast('0000-01-01' as date)	cast('0000-01-01' as date)-1
0000-01-01	100
[ACTUAL RESULT]:
Operator '-' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 8
[SQL STATEMENT]: select cast('2000-01-01' as date);
[EXPECT RESULT]:
cast('2000-01-01' as date)
Incorrect date value
[ACTUAL RESULT]:
cast(2000-01-01 as date)
2000-01-01

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 9
[SQL STATEMENT]: select cast('200-01-1' as date);
[EXPECT RESULT]:
cast('200-01-1' as date)
Incorrect date value
[ACTUAL RESULT]:
Incorrect date value

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 10
[SQL STATEMENT]: select cast('2021-02-29' as date);
[EXPECT RESULT]:
cast('2021-02-29' as date)
Incorrect date value
[ACTUAL RESULT]:
Incorrect date value

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 11
[SQL STATEMENT]: select cast('2022-02-01' as date)-cast('2022-01-01' as date);
[EXPECT RESULT]:
cast('2022-02-01' as date)-cast('2022-01-01' as date)
100
[ACTUAL RESULT]:
Operator '-' with parameters [DATE DATE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 12
[SQL STATEMENT]: select cast('2020-02-01' as date)+NULL;
[EXPECT RESULT]:
cast('2020-02-01' as date)+NULL
NULL
[ACTUAL RESULT]:
function doesn't implement its eval method

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 13
[SQL STATEMENT]: select cast('0000-00-00' as date);
[EXPECT RESULT]:
Incorrect date value
NULL
[ACTUAL RESULT]:
Incorrect date value

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 14
[SQL STATEMENT]: select cast(cast(0x13488c5 as signed) as date);
[EXPECT RESULT]:
cast(cast(0x13488c5 as signed) as date)
2022-01-01
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 18
[SQL STATEMENT]: SELECT DATE_ADD(20200215, INTERVAL 14 DAY);
[EXPECT RESULT]:
DATE_ADD(20200215, INTERVAL 14 DAY)
2020-02-29
[ACTUAL RESULT]:
Function 'date_add' with parameters [BIGINT BIGINT BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 25
[SQL STATEMENT]: select * from t1 where a='2022-01-01';
[EXPECT RESULT]:
a
2022-01-01
[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 27
[SQL STATEMENT]: delete from t1 where a=20220102;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 28
[SQL STATEMENT]: select * from t1 where a<>'20220104' order by 1 asc;
[EXPECT RESULT]:
a
2022-01-01
2022-01-03
[ACTUAL RESULT]:
Operator '<>' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 29
[SQL STATEMENT]: update t1 set a='2022-02-02' where a='2022-01-03';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 30
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a
2022-01-01
2022-01-04
2022-02-02
[ACTUAL RESULT]:
a
2022-01-01
2022-01-02
2022-01-03
2022-01-04

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 38
[SQL STATEMENT]: select distinct big from t1 where big=20000101;
[EXPECT RESULT]:
big
2000-01-01
[ACTUAL RESULT]:
Operator '=' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 39
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1;
[EXPECT RESULT]:
min(big)	max(big)	max(big)-1
2000-01-01	2002-01-01	20020100
[ACTUAL RESULT]:
Operator '-' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 40
[SQL STATEMENT]: select min(big),avg(big),count(big)+1 from t1 group by big;
[EXPECT RESULT]:
min(big)	avg(big)	count(big)+1
2000-01-01	20000101.0000	2
2001-01-01	20010101.0000	2
2002-01-01	20020101.0000	2
[ACTUAL RESULT]:
Function 'avg' with parameters [DATE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 68
[SQL STATEMENT]: select * from t1 join t2 on t1.dvalue=t2.dvalue where t1.dvalue>='2022-01-01' group by t1.dvalue order by t2.dvalue;
[EXPECT RESULT]:
dvalue	value32	dvalue	value32
2022-01-01	1	2022-01-01	5
2022-01-02	2	2022-01-02	4
[ACTUAL RESULT]:
Operator '>=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 75
[SQL STATEMENT]: SELECT id, id >= 20200102 FROM t_date;
[EXPECT RESULT]:
id	id >= 20200102
2020-01-01	false	
2022-01-02	true
[ACTUAL RESULT]:
Operator '>=' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 76
[SQL STATEMENT]: SELECT id, 1.1 <= '2020-01-01' FROM t_date;
[EXPECT RESULT]:
id	1.1 <= '2020-01-01'
2020-01-01	true	
2022-01-02	true
[ACTUAL RESULT]:
Operator '<=' with parameters [DOUBLE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 77
[SQL STATEMENT]: SELECT id, id = 202020101 FROM t_date;
[EXPECT RESULT]:
id	id = 202020101
2020-01-01	false	
2022-01-02	false
[ACTUAL RESULT]:
Operator '=' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 78
[SQL STATEMENT]: SELECT id, 20200101 = id FROM t_date;
[EXPECT RESULT]:
id	20200101 = id
2020-01-01	true	
2022-01-02	false
[ACTUAL RESULT]:
Operator '=' with parameters [BIGINT DATE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 79
[SQL STATEMENT]: SELECT * from t_date WHERE id = 20200101;
[EXPECT RESULT]:
id
2020-01-01
[ACTUAL RESULT]:
Operator '=' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 80
[SQL STATEMENT]: SELECT * from t_date WHERE id = 2.0200101e7;
[EXPECT RESULT]:
id
2020-01-01
[ACTUAL RESULT]:
Operator '=' with parameters [DATE DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 81
[SQL STATEMENT]: SELECT * from t_date WHERE id = '20200101';
[EXPECT RESULT]:
id
2020-01-01
[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 82
[SQL STATEMENT]: SELECT * from t_date WHERE id IN ('2020-01-01','2022-01-03');
[EXPECT RESULT]:
id
2020-01-01
[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 83
[SQL STATEMENT]: SELECT * from t_date WHERE id IN (2.0200101e7,2.0200103e7 );
[EXPECT RESULT]:
id
2020-01-01
[ACTUAL RESULT]:
Operator '=' with parameters [DATE DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 84
[SQL STATEMENT]: SELECT * from t_date WHERE id IN (20220101, 20220103);
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 85
[SQL STATEMENT]: SELECT * from t_date WHERE id IN ('2.0200101e7','2.0200103e7');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 86
[SQL STATEMENT]: SELECT * from t_date WHERE id BETWEEN 20191231 AND 20200101;
[EXPECT RESULT]:
id
2020-01-01
[ACTUAL RESULT]:
Operator '>=' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 87
[SQL STATEMENT]: SELECT * from t_date WHERE id BETWEEN 2.0200101e7 and 2.0200103e7;
[EXPECT RESULT]:
id
2020-01-01
[ACTUAL RESULT]:
Operator '>=' with parameters [DATE DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 88
[SQL STATEMENT]: SELECT * from t_date WHERE id BETWEEN '2020-01-02' AND '2020-01-03';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 89
[SQL STATEMENT]: SELECT * from t_date WHERE id BETWEEN '2.0200101e7' and '2.0200103e7';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 93
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) BETWEEN '2022-02-28' and '2022-03-01';
[EXPECT RESULT]:
a
2022-03-01
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 94
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)=20220301;
[EXPECT RESULT]:
a
2022-03-01
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 95
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in ('2022-02-28','2022-03-01');
[EXPECT RESULT]:
a
2022-03-01
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 97
[SQL STATEMENT]: SELECT CAST(20220101 AS date) BETWEEN 20220101 AND -1;
[EXPECT RESULT]:
CAST(20220101 AS date) BETWEEN 20220101 AND -1
false
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 98
[SQL STATEMENT]: SELECT CAST(00000501 AS date) NOT BETWEEN 100 AND -1;
[EXPECT RESULT]:
CAST(00000501 AS date) NOT BETWEEN 100 AND -1
true
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 99
[SQL STATEMENT]: SELECT CAST(0 AS date) BETWEEN 0 AND -1;
[EXPECT RESULT]:
CAST(0 AS date) BETWEEN 0 AND -1
NULL
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 100
[SQL STATEMENT]: SELECT CAST(10000101 as date) BETWEEN '1000-01-01' and '1000-01-02';
[EXPECT RESULT]:
CAST(10000101 as date) BETWEEN '1000-01-01' and '1000-01-02'
true
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 112
[SQL STATEMENT]: update t1 set a='2022-01-02' where a='2022-01-01' limit 1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 113
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-02	1
2022-01-01	2
[ACTUAL RESULT]:
a	b
2022-01-01	1
2022-01-01	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 115
[SQL STATEMENT]: update t1 set a='2022-01-02' where a='2022-01-01';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 116
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-02	1
2022-01-02	2
2022-01-02	3
[ACTUAL RESULT]:
a	b
2022-01-01	1
2022-01-01	2
2022-01-01	3

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 125
[SQL STATEMENT]: update t1 set a=a+101;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 126
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-02-03	2000-01-01
2022-02-05	2000-01-01
2022-02-07	2000-01-01
2022-02-09	2000-01-01
2022-02-11	2000-01-01
2022-02-13	2000-01-01
[ACTUAL RESULT]:
a	b
2022-01-02	2000-01-01
2022-01-04	2000-01-01
2022-01-06	2000-01-01
2022-01-08	2000-01-01
2022-01-10	2000-01-01
2022-01-12	2000-01-01

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 127
[SQL STATEMENT]: update t1 set a='2022-01-27' where a='2022-02-05';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 128
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-02-03	2000-01-01
2022-01-27	2000-01-01
2022-02-07	2000-01-01
2022-02-09	2000-01-01
2022-02-11	2000-01-01
2022-02-13	2000-01-01
[ACTUAL RESULT]:
a	b
2022-01-02	2000-01-01
2022-01-04	2000-01-01
2022-01-06	2000-01-01
2022-01-08	2000-01-01
2022-01-10	2000-01-01
2022-01-12	2000-01-01

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 129
[SQL STATEMENT]: update t1 set a=a-1 where 1 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '-' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 130
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-02-03	2000-01-01
2022-01-27	2000-01-01
2022-02-07	2000-01-01
2022-02-09	2000-01-01
2022-02-11	2000-01-01
2022-02-13	2000-01-01
[ACTUAL RESULT]:
a	b
2022-01-02	2000-01-01
2022-01-04	2000-01-01
2022-01-06	2000-01-01
2022-01-08	2000-01-01
2022-01-10	2000-01-01
2022-01-12	2000-01-01

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 131
[SQL STATEMENT]: update t1 set a=a-1 where 3 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '-' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 132
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-02-02	2000-01-01
2022-01-26	2000-01-01
2022-02-06	2000-01-01
2022-02-08	2000-01-01
2022-02-10	2000-01-01
2022-02-12	2000-01-01
[ACTUAL RESULT]:
a	b
2022-01-02	2000-01-01
2022-01-04	2000-01-01
2022-01-06	2000-01-01
2022-01-08	2000-01-01
2022-01-10	2000-01-01
2022-01-12	2000-01-01

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 150
[SQL STATEMENT]: delete from t1 where a='2022-01-01' limit 1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 151
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-01	2
[ACTUAL RESULT]:
a	b
2022-01-01	1
2022-01-01	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 153
[SQL STATEMENT]: delete from t1 where a='2022-01-01';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 154
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
[ACTUAL RESULT]:
a	b
2022-01-01	1
2022-01-01	2
2022-01-01	3

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 162
[SQL STATEMENT]: delete from t1 where a=20220101+3;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATE BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 163
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02	2000-01-01
2022-01-06	2000-01-01
2022-01-08	2000-01-01
2022-01-10	2000-01-01
2022-01-12	2000-01-01
[ACTUAL RESULT]:
a	b
2022-01-02	2000-01-01
2022-01-04	2000-01-01
2022-01-06	2000-01-01
2022-01-08	2000-01-01
2022-01-10	2000-01-01
2022-01-12	2000-01-01

[ERROR]
[SCRIPT   FILE]: cases/dtype/date.test
[ROW    NUMBER]: 165
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02	2000-01-01
2022-01-06	2000-01-01
2022-01-08	2000-01-01
2022-01-10	2000-01-01
2022-01-12	2000-01-01
[ACTUAL RESULT]:
a	b
2022-01-02	2000-01-01
2022-01-04	2000-01-01
2022-01-06	2000-01-01
2022-01-08	2000-01-01
2022-01-10	2000-01-01
2022-01-12	2000-01-01

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 9
[SQL STATEMENT]: select cast('2000-01-01 00:00:00.9011' as datetime(0));
[EXPECT RESULT]:
cast(2000-01-01 00:00:00.9011 as datetime(0))
2000-01-01 00:00:01
[ACTUAL RESULT]:
cast(2000-01-01 00:00:00.9011 as datetime(0))
2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 10
[SQL STATEMENT]: select cast('2000-01-01 00:00:00.001100999' as datetime(6));
[EXPECT RESULT]:
cast(2000-01-01 00:00:00.001100999 as datetime(6))
2000-01-01 00:00:00.001101
[ACTUAL RESULT]:
cast(2000-01-01 00:00:00.001100999 as datetime(6))
2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 11
[SQL STATEMENT]: select cast('2000-01-01 00:00:00.001109' as datetime(5));
[EXPECT RESULT]:
cast(2000-01-01 00:00:00.001109 as datetime(5))
2000-01-01 00:00:00.00111
[ACTUAL RESULT]:
cast(2000-01-01 00:00:00.001109 as datetime(5))
2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 15
[SQL STATEMENT]: select cast('2022-01-01 25:00:00' as datetime(0));
[EXPECT RESULT]:
cast(2022-01-01 25:00:00 as datetime(0))
NULL
[ACTUAL RESULT]:
Incorrect datetime value

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 16
[SQL STATEMENT]: select cast('2000-01-01' as datetime(0))+1;
[EXPECT RESULT]:
cast(2000-01-01 as datetime(0))+1
20000101000001
[ACTUAL RESULT]:
Operator '+' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 17
[SQL STATEMENT]: select cast('2000-01-01' as datetime(0))*1;
[EXPECT RESULT]:
cast(2000-01-01 as datetime(0))*1
20000101000000
[ACTUAL RESULT]:
Operator '*' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 18
[SQL STATEMENT]: select cast('2000-01-01' as datetime(0))*1.1;
[EXPECT RESULT]:
cast(2000-01-01 as datetime(0))*1.1
22000111100000.0
[ACTUAL RESULT]:
Operator '*' with parameters [DATETIME DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 25
[SQL STATEMENT]: SELECT DATE_ADD('2022-02-28 23:59:59.9999', INTERVAL 1 YEAR) '1 year earlier';
[EXPECT RESULT]:
1 year earlier
202333-02-28 23:59:59.999900
[ACTUAL RESULT]:
1 year earlier
2023-02-28 23:59:59.999900

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 34
[SQL STATEMENT]: select * from t1 where a='2022-01-02';
[EXPECT RESULT]:
a
2022-01-02 00:00:00
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 35
[SQL STATEMENT]: select * from t1 where a>20220102;
[EXPECT RESULT]:
a
2022-01-02 00:00:01
2022-01-02 00:00:02
[ACTUAL RESULT]:
Operator '>' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 36
[SQL STATEMENT]: select * from t1 where a!='2022-01-02';
[EXPECT RESULT]:
a
2020-01-01 00:00:00
2022-01-02 00:00:01
2022-01-02 00:00:02
[ACTUAL RESULT]:
Operator '<>' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 38
[SQL STATEMENT]: update t1 set a=DATE_ADD(a ,INTERVAL 1 WEEK) where a>'20220102';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '>' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 43
[SQL STATEMENT]: insert into t1 (big) values ('20220103'),('2022-01-01'),('2022-01-01 00:00:01'),('2022-01-02 00:00.00.000050');
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Incorrect DATETIME value: '2022-01-02 00:00.00.000050' for column 'big' at row 3

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 47
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1 group by a;
[EXPECT RESULT]:
min(big)	max(big)	max(big) - 1
2022-01-01 00:00:00.0000	2022-01-03 00:00:00.0000	20220102999999.0000
[ACTUAL RESULT]:
Operator '-' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 52
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
id	a
2022-01-31 00:00:00.000001	1
[ACTUAL RESULT]:
id	a
2022-01-31 00:00:00	1

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 72
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
dt	value32
2022-01-01 00:00:00.000050	1
2022-01-01 00:00:00.000500	2
2022-01-01 00:00:00.005000	3
[ACTUAL RESULT]:
dt	value32
2022-01-01 00:00:00.000050000	1
2022-01-01 00:00:00.000500000	2
2022-01-01 00:00:00.005000000	3

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 73
[SQL STATEMENT]: select * from t2;
[EXPECT RESULT]:
dt	value32
2022-01-01 00:00:00.001	5
2022-01-01 00:00:00.005	4
[ACTUAL RESULT]:
dt	value32
2022-01-01 00:00:00.005000000	4
2022-01-01 00:00:00.001000000	5

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 74
[SQL STATEMENT]: select * from t1 join t2 on t1.dt=t2.dt order by 1 desc, t2.dt asc;
[EXPECT RESULT]:
dt	value32	dt	value32
2022-01-01 00:00:00.005000	3	2022-01-01 00:00:00.005	4
[ACTUAL RESULT]:
dt	value32	dt	value32
2022-01-01 00:00:00.005000000	3	2022-01-01 00:00:00.005000000	4

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 75
[SQL STATEMENT]: select * from t1 join t2 on t1.dt=t2.dt where t1.value32<>t2.value32;
[EXPECT RESULT]:
dt	value32	dt	value32
2022-01-01 00:00:00.005000	3	2022-01-01 00:00:00.005	4
[ACTUAL RESULT]:
dt	value32	dt	value32
2022-01-01 00:00:00.005000000	3	2022-01-01 00:00:00.005000000	4

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 82
[SQL STATEMENT]: SELECT id, id >= 20200102 FROM t_datetime;
[EXPECT RESULT]:
id	id >= 20200102
2020-01-01 23:59:59.999999	false	
2022-01-02 00:00:00.000000	true
[ACTUAL RESULT]:
Operator '>=' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 83
[SQL STATEMENT]: SELECT id, id = 202020101 FROM t_datetime;
[EXPECT RESULT]:
id	id = 202020101
2020-01-01 23:59:59.999999	false	
2022-01-02 00:00:00.000000	false
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 84
[SQL STATEMENT]: SELECT id, 20200101 = id FROM t_datetime;
[EXPECT RESULT]:
id	20200101 = id
2020-01-01 23:59:59.999999	false	
2022-01-02 00:00:00.000000	false
[ACTUAL RESULT]:
Operator '=' with parameters [BIGINT DATETIME] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 85
[SQL STATEMENT]: SELECT * from t_datetime WHERE id = 20200102;
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 86
[SQL STATEMENT]: SELECT * from t_datetime WHERE id = 2.0200102e7;
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 87
[SQL STATEMENT]: SELECT * from t_datetime WHERE id = '20200102';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 88
[SQL STATEMENT]: SELECT * from t_datetime WHERE id IN ('2020-01-01','2022-01-02');
[EXPECT RESULT]:
id
2022-01-02 00:00:00.000000
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 89
[SQL STATEMENT]: SELECT * from t_datetime WHERE id IN (2.0200101e7,2.0200102e7 );
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 90
[SQL STATEMENT]: SELECT * from t_datetime WHERE id IN ('20220101', 20220102);
[EXPECT RESULT]:
id
2022-01-02 00:00:00.000000
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 91
[SQL STATEMENT]: SELECT * from t_datetime WHERE id IN ('2.0200101e7','2.0200102e7');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 92
[SQL STATEMENT]: SELECT * from t_datetime WHERE id BETWEEN 20191231 AND 20200101;
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 93
[SQL STATEMENT]: SELECT * from t_datetime WHERE id BETWEEN 2.0200101e7 and 2.0200102e7;
[EXPECT RESULT]:
id
2020-01-01 23:59:59.999999
[ACTUAL RESULT]:
Operator '>=' with parameters [DATETIME DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 94
[SQL STATEMENT]: SELECT * from t_datetime WHERE id BETWEEN '2020-01-01' AND '2020-01-02';
[EXPECT RESULT]:
id
2020-01-01 23:59:59.999999
[ACTUAL RESULT]:
Operator '>=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 95
[SQL STATEMENT]: SELECT * from t_datetime WHERE id BETWEEN '2022-01-01 00:00:00' AND '2022-01-02 00:00:00.000000';
[EXPECT RESULT]:
id
2022-01-02 00:00:00.000000
[ACTUAL RESULT]:
Operator '>=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 99
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) not BETWEEN '2022-02-28' and '2022-03-01';
[EXPECT RESULT]:
a
2022-03-01 00:00:01.000100
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 100
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)!=20220301;
[EXPECT RESULT]:
a
2022-03-01 00:00:01.000100
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 101
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in ('2022-03-01','2022-03-01 00:00:00.0001');
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 103
[SQL STATEMENT]: SELECT CAST(20220101 AS datetime(0)) BETWEEN 20220101 AND -1;
[EXPECT RESULT]:
CAST(20220101 AS datetime(0)) BETWEEN 20220101 AND -1
false
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATETIME] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 104
[SQL STATEMENT]: SELECT CAST(00000501 AS datetime(0)) NOT BETWEEN 100 AND -1;
[EXPECT RESULT]:
CAST(00000501 AS datetime(0)) NOT BETWEEN 100 AND -1
true
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATETIME] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 105
[SQL STATEMENT]: SELECT CAST(0 AS datetime(0)) BETWEEN 0 AND -1;
[EXPECT RESULT]:
CAST(0 AS datetime(0)) BETWEEN 0 AND -1
NULL
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATETIME] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 106
[SQL STATEMENT]: SELECT CAST(1000101 as datetime(0)) BETWEEN '1000-01-01' and '1000-01-02';
[EXPECT RESULT]:
CAST(1000101 as datetime(0)) BETWEEN '1000-01-01' and '1000-01-02'
false
[ACTUAL RESULT]:
Operator 'cast' with parameters [BIGINT DATETIME] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 117
[SQL STATEMENT]: update t1 set a='2022-01-02' where a='2022-01-01 00:00:00' limit 1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 118
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:00:00	1
2022-01-01 00:00:00	2
[ACTUAL RESULT]:
a	b
2022-01-01 00:00:00	1
2022-01-01 00:00:00	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 120
[SQL STATEMENT]: update t1 set a='2022-01-02' where a='2022-01-01 00:00:00';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 121
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:00:00	1
2022-01-02 00:00:00	2
2022-01-02 00:00:00	3
[ACTUAL RESULT]:
a	b
2022-01-01 00:00:00	1
2022-01-01 00:00:00	2
2022-01-01 00:00:00	3

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 130
[SQL STATEMENT]: update t1 set a=a+101;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 131
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:01:01	2000-01-01 00:00:00.0000
2022-01-04 00:01:01	2000-01-01 00:00:00.0000
2022-01-06 00:01:01	2000-01-01 00:00:00.0000
2022-01-08 00:01:01	2000-01-01 00:00:00.0000
2022-01-10 01:02:02	2000-01-01 00:00:00.0000
2022-01-12 00:01:01	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 132
[SQL STATEMENT]: update t1 set a='2022-01-27 12:12:12.0001' where a='2022-01-08 00:01:01';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 133
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:01:01	2000-01-01 00:00:00.0000
2022-01-04 00:01:01	2000-01-01 00:00:00.0000
2022-01-06 00:01:01	2000-01-01 00:00:00.0000
2022-01-10 01:02:02	2000-01-01 00:00:00.0000
2022-01-12 00:01:01	2000-01-01 00:00:00.0000
2022-01-27 12:12:12	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 134
[SQL STATEMENT]: update t1 set a=a-1 where 1 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '-' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 135
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:01:01	2000-01-01 00:00:00.0000
2022-01-04 00:01:01	2000-01-01 00:00:00.0000
2022-01-06 00:01:01	2000-01-01 00:00:00.0000
2022-01-10 01:02:02	2000-01-01 00:00:00.0000
2022-01-12 00:01:01	2000-01-01 00:00:00.0000
2022-01-27 12:12:12	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 136
[SQL STATEMENT]: update t1 set a=a-1 where 3 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '-' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 137
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:01:00	2000-01-01 00:00:00.0000
2022-01-04 00:01:00	2000-01-01 00:00:00.0000
2022-01-06 00:01:00	2000-01-01 00:00:00.0000
2022-01-10 01:02:01	2000-01-01 00:00:00.0000
2022-01-12 00:01:00	2000-01-01 00:00:00.0000
2022-01-27 12:12:11	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 155
[SQL STATEMENT]: delete from t1 where a='2022-01-01 00:00:00' limit 1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 156
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-01 00:00:00	2
[ACTUAL RESULT]:
a	b
2022-01-01 00:00:00	1
2022-01-01 00:00:00	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 158
[SQL STATEMENT]: delete from t1 where a='2022-01-01';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 159
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
[ACTUAL RESULT]:
a	b
2022-01-01 00:00:00	1
2022-01-01 00:00:00	2
2022-01-01 00:00:00	3

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 167
[SQL STATEMENT]: delete from t1 where a=20220101+3;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DATETIME BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 168
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00.0000
2022-01-06 00:00:00	2000-01-01 00:00:00.0000
2022-01-08 00:00:00	2000-01-01 00:00:00.0000
2022-01-10 01:01:01	2000-01-01 00:00:00.0000
2022-01-12 00:00:00	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/datetime.test
[ROW    NUMBER]: 170
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00.0000
2022-01-06 00:00:00	2000-01-01 00:00:00.0000
2022-01-08 00:00:00	2000-01-01 00:00:00.0000
2022-01-10 01:01:01	2000-01-01 00:00:00.0000
2022-01-12 00:00:00	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 10
[SQL STATEMENT]: select round(cast(2320310.66666612312 as decimal));
[EXPECT RESULT]:
round(cast(2320310.66666612312 as decimal))
2320311
[ACTUAL RESULT]:
Function 'round' with parameters [DECIMAL64] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 11
[SQL STATEMENT]: select floor(cast(2231231.501231 as decimal));
[EXPECT RESULT]:
floor(cast(2231231.501231 as decimal))
2231232
[ACTUAL RESULT]:
Function 'floor' with parameters [DECIMAL64] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 16
[SQL STATEMENT]: insert into t1 values (18446744073709551615), (0xFFFFFFFFFFFFFE), (18446744073709551613.0000000), (18446744073709551612.0000000001);
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Incorrect DECIMAL128 value: '0xfffffffffffffe' for column 'a' at row 1

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 17
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a
72057594037927934
18446744073709551612
18446744073709551613
18446744073709551615
[ACTUAL RESULT]:
a

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 18
[SQL STATEMENT]: select * from t1 where a=18446744073709551615;
[EXPECT RESULT]:
a
18446744073709551615
[ACTUAL RESULT]:
a

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 20
[SQL STATEMENT]: delete from t1 where a=18446744073709551615.000000000;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL128 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 21
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a
72057594037927934
18446744073709551612
18446744073709551613
[ACTUAL RESULT]:
a

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 27
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1;
[EXPECT RESULT]:
min(big)	max(big)	max(big)-1
-1.00000000000	92.23372036855	91.23372036855
select min(big),avg(big),max(big)-1 from t1 group by a;
min(big)	avg(big)	max(big)-1
-1.00000000000	34.526466426966667	91.23372036855
[ACTUAL RESULT]:
min(big)	max(big)	max(big) - 1
-1.00000000000	92.23372036855	91.23372036855

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 31
[SQL STATEMENT]: insert into t1 (big) values (0),(18446744073), (0xFFFFFE), (184467.13), (184462);
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Incorrect DECIMAL128 value: '0xfffffe' for column 'big' at row 2

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 32
[SQL STATEMENT]: select * from t1 order by 2 desc;
[EXPECT RESULT]:
a	big
1	18446744073.0000
1	16777214.0000
1	184467.1300
1	184462.0000
1	0.0000
[ACTUAL RESULT]:
a	big

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 33
[SQL STATEMENT]: select * from t1 order by big limit 1,2;
[EXPECT RESULT]:
a	big
1	184462.0000
1	184467.1300
[ACTUAL RESULT]:
a	big

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 34
[SQL STATEMENT]: select * from t1 order by big limit 2 offset 1;
[EXPECT RESULT]:
a	big
1	184462.0000
1	184467.1300
[ACTUAL RESULT]:
a	big

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 35
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1;
[EXPECT RESULT]:
min(big)	max(big)	max(big)-1
0.0000	18446744073.0000	18446744072.0000
select min(big),count(big),max(big)-1 from t1 group by a;
min(big)	count(big)	max(big)-1
0.0000	5	18446744072.0000
[ACTUAL RESULT]:
min(big)	max(big)	max(big) - 1
null	null	null

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 68
[SQL STATEMENT]: select * from t1 where decimal_col=-17666000000000000000 order by 1 asc;
[EXPECT RESULT]:
decimal_col
-17666000000000000000
[ACTUAL RESULT]:
decimal_col

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 69
[SQL STATEMENT]: select * from t1 where decimal_col='-17666000000000000000' order by decimal_col desc;
[EXPECT RESULT]:
decimal_col
-17666000000000000000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL128 VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 73
[SQL STATEMENT]: select cast(10000002383263201056 as decimal) mod 50 as result;
[EXPECT RESULT]:
result
49
[ACTUAL RESULT]:
Operator '%' with parameters [DECIMAL64 BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 74
[SQL STATEMENT]: select cast(cast(19999999999999999999 as decimal) as unsigned);
[EXPECT RESULT]:
cast(cast(19999999999999999999 as decimal) as unsigned)
9999999999
[ACTUAL RESULT]:
input decimal value out of range for Decimal(10, 0)

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 82
[SQL STATEMENT]: INSERT INTO t1 (id,a) VALUES
(1,0),
(2,CAST(0x7FFFFFFFFFFFFFFF AS UNSIGNED)),
(3,CAST(0x8000000000000000 AS UNSIGNED)),
(4,CAST(0xFFFFFFFFFFFFFFFF AS UNSIGNED));
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Function expression in INSERT statement value list will be supported in future version. for column 'a' at row 1

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 85
[SQL STATEMENT]: select distinct * from t1 where ((a = '2147483647') and (b = '2147483647'));
[EXPECT RESULT]:
id	a	b
3	2147483647	2147483647
5	2147483647	2147483647
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL128 VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 86
[SQL STATEMENT]: select a,count(a) from t1 group by a having count(a)>=2;
[EXPECT RESULT]:
a	count(a)
2147483647	2
[ACTUAL RESULT]:
a	count(a)

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 93
[SQL STATEMENT]: SELECT id, id >= 1.1 FROM t_decimal;
[EXPECT RESULT]:
id	id >= 1.1
1.00000	false	
2.00000	true	
1.10000	true	
2.20000	true
[ACTUAL RESULT]:
Operator '>=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 94
[SQL STATEMENT]: SELECT id, 1.1 <= id FROM t_decimal;
[EXPECT RESULT]:
id	1.1 <= id
1.00000	false	
2.00000	true	
1.10000	true	
2.20000	true
[ACTUAL RESULT]:
Operator '<=' with parameters [DOUBLE DECIMAL64] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 95
[SQL STATEMENT]: SELECT id, id = 1.1 FROM t_decimal;
[EXPECT RESULT]:
id	id = 1.1
1.00000	false	
2.00000	false	
1.10000	true	
2.20000	false
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 96
[SQL STATEMENT]: SELECT id, 1.1 = id FROM t_decimal;
[EXPECT RESULT]:
id	1.1 = id
1.00000	false	
2.00000	false	
1.10000	true	
2.20000	false
[ACTUAL RESULT]:
Operator '=' with parameters [DOUBLE DECIMAL64] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 97
[SQL STATEMENT]: SELECT * from t_decimal WHERE id = 1.1;
[EXPECT RESULT]:
id
1.10000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 98
[SQL STATEMENT]: SELECT * from t_decimal WHERE id = 1.1e0;
[EXPECT RESULT]:
id
1.10000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 99
[SQL STATEMENT]: SELECT * from t_decimal WHERE id = '1.1';
[EXPECT RESULT]:
id
1.10000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 100
[SQL STATEMENT]: SELECT * from t_decimal WHERE id = '1.1e0';
[EXPECT RESULT]:
id
1.10000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 101
[SQL STATEMENT]: SELECT * from t_decimal WHERE id IN (1.1, 2.2);
[EXPECT RESULT]:
id
1.10000
2.20000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 102
[SQL STATEMENT]: SELECT * from t_decimal WHERE id IN (1.1e0, 2.2e0);
[EXPECT RESULT]:
id
1.10000
2.20000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 103
[SQL STATEMENT]: SELECT * from t_decimal WHERE id IN ('1.1', '2.2');
[EXPECT RESULT]:
id
1.10000
2.20000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 104
[SQL STATEMENT]: SELECT * from t_decimal WHERE id IN ('1.1e0', '2.2e0');
[EXPECT RESULT]:
id
1.10000
2.20000
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 105
[SQL STATEMENT]: SELECT * from t_decimal WHERE id BETWEEN 1.1 AND 1.9;
[EXPECT RESULT]:
id
1.10000
[ACTUAL RESULT]:
Operator '>=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 106
[SQL STATEMENT]: SELECT * from t_decimal WHERE id BETWEEN 1.1e0 AND 1.9e0;
[EXPECT RESULT]:
id
1.10000
[ACTUAL RESULT]:
Operator '>=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 107
[SQL STATEMENT]: SELECT * from t_decimal WHERE id BETWEEN '1.1' AND '1.9';
[EXPECT RESULT]:
id
1.10000
[ACTUAL RESULT]:
Operator '>=' with parameters [DECIMAL64 VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 108
[SQL STATEMENT]: SELECT * from t_decimal WHERE id BETWEEN '1.1e0' AND '1.9e0';
[EXPECT RESULT]:
id
1.10000
[ACTUAL RESULT]:
Operator '>=' with parameters [DECIMAL64 VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 112
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) BETWEEN 0 and 0.9;
[EXPECT RESULT]:
a
0.9
0.9
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 113
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)=0.9;
[EXPECT RESULT]:
a
0.9
0.9
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 114
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in (0.8,0.9);
[EXPECT RESULT]:
a
0.9
0.9
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 115
[SQL STATEMENT]: SELECT * FROM t1 WHERE a BETWEEN 0 AND 0.9;
[EXPECT RESULT]:
a
0.9
0.9
[ACTUAL RESULT]:
Operator '<=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 116
[SQL STATEMENT]: SELECT * FROM t1 WHERE a=0.9;
[EXPECT RESULT]:
a
0.9
0.9
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 117
[SQL STATEMENT]: SELECT * FROM t1 WHERE a IN (0.8,0.9);
[EXPECT RESULT]:
a
0.9
0.9
[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 124
[SQL STATEMENT]: select count(*) from t
where id>=88947549497796.3574 and id <=889475494977969.358;
[EXPECT RESULT]:
count(*)
3
[ACTUAL RESULT]:
Operator '>=' with parameters [DECIMAL128 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 126
[SQL STATEMENT]: select count(*) from t
where id between 88947549497796.3574 and 889475494977969.358;
[EXPECT RESULT]:
count(*)
3
[ACTUAL RESULT]:
Operator '>=' with parameters [DECIMAL128 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 145
[SQL STATEMENT]: update t1 set a=2 where a=1.00;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 146
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2.00	1.00
2.00	2.00
2.00	3.00
[ACTUAL RESULT]:
a	b
1.00	1.00
1.00	2.00
1.00	3.00

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 166
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
27.00000	12346
103.00000	12346
105.00000	12346
107.00000	12346
109.00000	12346
111.00000	12346
113.00000	12346
115.00000	12346
117.00000	12346
119.00000	12346
121.00000	12346
123.00000	12346
124.00000	12346
127.00000	12346
[ACTUAL RESULT]:
a	b
103.00000	12346
105.00000	12346
107.00000	12346
109.00000	12346
111.00000	12346
113.00000	12346
115.00000	12346
117.00000	12346
119.00000	12346
121.00000	12346
123.00000	12346
125.00000	12346
127.00000	12346
124.00000	12346

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 168
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
27.00000	12346
103.00000	12346
105.00000	12346
107.00000	12346
109.00000	12346
111.00000	12346
113.00000	12346
115.00000	12346
117.00000	12346
119.00000	12346
121.00000	12346
123.00000	12346
124.00000	12346
127.00000	12346
[ACTUAL RESULT]:
a	b
103.00000	12346
105.00000	12346
107.00000	12346
109.00000	12346
111.00000	12346
113.00000	12346
115.00000	12346
117.00000	12346
119.00000	12346
121.00000	12346
123.00000	12346
125.00000	12346
127.00000	12346
124.00000	12346

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 170
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
26.00000	12346
102.00000	12346
104.00000	12346
106.00000	12346
108.00000	12346
110.00000	12346
112.00000	12346
114.00000	12346
116.00000	12346
118.00000	12346
120.00000	12346
122.00000	12346
123.00000	12346
126.00000	12346
[ACTUAL RESULT]:
a	b
102.00000	12346
104.00000	12346
106.00000	12346
108.00000	12346
110.00000	12346
112.00000	12346
114.00000	12346
116.00000	12346
118.00000	12346
120.00000	12346
122.00000	12346
124.00000	12346
126.00000	12346
123.00000	12346

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 189
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
1.00	2.0000
[ACTUAL RESULT]:
a	b
1.00	1.0000
1.00	2.0000

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 192
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
[ACTUAL RESULT]:
a	b
1.00	1.0000
1.00	2.0000
1.00	3.0000

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 209
[SQL STATEMENT]: delete from t1 where a=2+2.0000;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 210
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2.11110	12346
6.12311	12346
8.41231	12346
24.00000	12346
[ACTUAL RESULT]:
a	b
2.11110	12346
4.00000	12346
6.12311	12346
8.41231	12346
24.00000	12346

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 211
[SQL STATEMENT]: delete from t1 where  a=24.0000;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [DECIMAL64 DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 212
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2.11110	12346
6.12311	12346
8.41231	12346
[ACTUAL RESULT]:
a	b
2.11110	12346
4.00000	12346
6.12311	12346
8.41231	12346
24.00000	12346

[ERROR]
[SCRIPT   FILE]: cases/dtype/decimal.test
[ROW    NUMBER]: 214
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2.11110	12346
6.12311	12346
8.41231	12346
[ACTUAL RESULT]:
a	b
2.11110	12346
4.00000	12346
6.12311	12346
8.41231	12346
24.00000	12346

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 30
[SQL STATEMENT]: show create table t1;
[EXPECT RESULT]:
Table   Create Table
t1      CREATE TABLE `t1` (
`a` DOUBLE DEFAULT NULL
)
[ACTUAL RESULT]:
Table	Create Table
t1	CREATE TABLE `t1` (
`a` DOUBLE DEFAULT NULL
)

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 84
[SQL STATEMENT]: select * from t1 where a>='17.6660';
[EXPECT RESULT]:
a
17.666
[ACTUAL RESULT]:
Operator '>=' with parameters [DOUBLE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 93
[SQL STATEMENT]: INSERT INTO t1 (id,a) VALUES
(1,0),
(2,CAST(0x7FFFFFFFFFFFFFFF AS UNSIGNED)),
(3,CAST(0x8000000000000000 AS UNSIGNED)),
(4,CAST(0xFFFFFFFFFFFFFFFF AS UNSIGNED));
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Function expression in INSERT statement value list will be supported in future version. for column 'a' at row 1

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 94
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
id	a	b
1	0	NULL
2	9223372036854776000	NULL
3	9223372036854776000	NULL
4	18446744073709552000	NULL
[ACTUAL RESULT]:
id	a	b

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 97
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
id	a	b
1	0	0
2	9223372036854776000	9.223372036854776e18
3	9223372036854776000	9.223372036854776e18
4	18446744073709552000	1.844674407370955e19
[ACTUAL RESULT]:
id	a	b

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 98
[SQL STATEMENT]: select a,count(a) from t1 where ((a = 9.223372036854776e18) and (b = '9.223372036854776e18')) group by a having count(a)>1 order by count(a);
[EXPECT RESULT]:
a	count(a)
9223372036854776000	2
[ACTUAL RESULT]:
a	count(a)

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 105
[SQL STATEMENT]: SELECT id, id = 1.1 FROM t_double;
[EXPECT RESULT]:
id	id = 1.1
1.2	false	
1.1	true	
2.0	false
[ACTUAL RESULT]:
id	id = 1.1
1.19	false
1.11	false
2.0	false

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 106
[SQL STATEMENT]: SELECT id, 1.1 = id FROM t_double;
[EXPECT RESULT]:
id	1.1 = id
1.2	false	
1.1	true	
2.0	false
[ACTUAL RESULT]:
id	1.1 = id
1.19	false
1.11	false
2.0	false

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 107
[SQL STATEMENT]: SELECT * from t_double WHERE id = 1.1;
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
id

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 108
[SQL STATEMENT]: SELECT * from t_double WHERE id = 1.1e0;
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
id

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 109
[SQL STATEMENT]: SELECT * from t_double WHERE id = '1.1';
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
Operator '=' with parameters [DOUBLE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 110
[SQL STATEMENT]: SELECT * from t_double WHERE id = '1.1e0';
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
Operator '=' with parameters [DOUBLE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 111
[SQL STATEMENT]: SELECT * from t_double WHERE id IN (1.1, 2.2);
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
id

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 112
[SQL STATEMENT]: SELECT * from t_double WHERE id IN (1.1e0, 2.2e0);
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
id

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 113
[SQL STATEMENT]: SELECT * from t_double WHERE id IN ('1.1', '2.2');
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
Operator '=' with parameters [DOUBLE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 114
[SQL STATEMENT]: SELECT * from t_double WHERE id IN ('1.1e0', '2.2e0');
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
Operator '=' with parameters [DOUBLE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 117
[SQL STATEMENT]: SELECT * from t_double WHERE id BETWEEN '1.1' AND '1.9';
[EXPECT RESULT]:
id
1.2
1.1
[ACTUAL RESULT]:
Operator '>=' with parameters [DOUBLE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 118
[SQL STATEMENT]: SELECT * from t_double WHERE id BETWEEN '1.1e0' AND '1.9e0';
[EXPECT RESULT]:
id
1.2
1.1
[ACTUAL RESULT]:
Operator '>=' with parameters [DOUBLE VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/double.test
[ROW    NUMBER]: 122
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) BETWEEN 0 and 0.9;
[EXPECT RESULT]:
a
0.8999
0.8000
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 15
[SQL STATEMENT]: select * from t1 order by 1;
[EXPECT RESULT]:
a
-3.40282e38
-1.17549e-38
0
1.17549e-38
3.40282e38
[ACTUAL RESULT]:
a
-3.4028235E38
-1.1754944E-38
0.0
1.1754944E-38
3.4028235E38

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 30
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	big
1	-1.00000
1	12345679.00000
1	92233718038528.00000
[ACTUAL RESULT]:
a	big
1.0	-1.0
1.0	1.2345679E7
1.0	9.223372E13

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 31
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1;
[EXPECT RESULT]:
min(big)	max(big)	max(big)-1
-1.00000	92233718038528.00000	92233718038527.00000
[ACTUAL RESULT]:
min(big)	max(big)	max(big) - 1
-1.0	9.223372E13	9.2233718038527E13

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 32
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1 group by a;
[EXPECT RESULT]:
min(big)	max(big)	max(big)-1
-1.00000	92233718038528.00000	92233718038527.00000
[ACTUAL RESULT]:
min(big)	max(big)	max(big) - 1
-1.0	9.223372E13	9.2233718038527E13

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 36
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	big
1	-1
1	12345700
1	92233700000000
[ACTUAL RESULT]:
a	big
1.0	-1.0
1.0	1.2345679E7
1.0	9.223372E13

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 37
[SQL STATEMENT]: select * from t1 order by big limit 1,2;
[EXPECT RESULT]:
a	big
1	12345700
1	92233700000000
[ACTUAL RESULT]:
a	big
1.0	1.2345679E7
1.0	9.223372E13

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 38
[SQL STATEMENT]: select * from t1 order by big limit 2 offset 1;
[EXPECT RESULT]:
a	big
1	12345700
1	92233700000000
[ACTUAL RESULT]:
a	big
1.0	1.2345679E7
1.0	9.223372E13

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 39
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1;
[EXPECT RESULT]:
min(big)	max(big)	max(big)-1
-1	92233700000000	92233718038527
[ACTUAL RESULT]:
min(big)	max(big)	max(big) - 1
-1.0	9.223372E13	9.2233718038527E13

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 40
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1 group by a;
[EXPECT RESULT]:
min(big)	max(big)	max(big)-1
-1	92233700000000	92233718038527
[ACTUAL RESULT]:
min(big)	max(big)	max(big) - 1
-1.0	9.223372E13	9.2233718038527E13

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 79
[SQL STATEMENT]: select * from t1 where a>='17.6660';
[EXPECT RESULT]:
a
17.666
[ACTUAL RESULT]:
Operator '>=' with parameters [FLOAT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 83
[SQL STATEMENT]: select cast(0-a as signed) from t1;
[EXPECT RESULT]:
cast(0-a as signed)
-18
[ACTUAL RESULT]:
cast(0 - a as signed)
-17

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 92
[SQL STATEMENT]: INSERT INTO t1 (id,a) VALUES
(1,0),
(2,CAST(0x7FFFFFFFFFFFFFFF AS UNSIGNED)),
(3,CAST(0x8000000000000000 AS UNSIGNED)),
(4,CAST(0xFFFFFFFFFFFFFFFF AS UNSIGNED));
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Function expression in INSERT statement value list will be supported in future version. for column 'a' at row 1

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 93
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
id	a	b
1	0	NULL
2	9.22337e18	NULL
3	9.22337e18	NULL
4	1.84467e19	NULL
[ACTUAL RESULT]:
id	a	b

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 97
[SQL STATEMENT]: select distinct a,b from t1 where ((a != 9.223372036854776e18) and (b != '9.223372036854776e18')) order by 2;
[EXPECT RESULT]:
a	b
0	0
1.84467e19	1.844674407370955e19
[ACTUAL RESULT]:
a	b

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 103
[SQL STATEMENT]: SELECT id, id = 1.1 FROM t_float;
[EXPECT RESULT]:
id	id = 1.1
1.0	false	
1.1	true	
2.0	false
[ACTUAL RESULT]:
id	id = 1.1
1.0	false
1.1	false
2.0	false

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 104
[SQL STATEMENT]: SELECT id, 1.1 = id FROM t_float;
[EXPECT RESULT]:
id	1.1 = id
1.0	false	
1.1	true	
2.0	false
[ACTUAL RESULT]:
id	1.1 = id
1.0	false
1.1	false
2.0	false

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 105
[SQL STATEMENT]: SELECT * from t_float WHERE id = 1.1;
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
id

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 106
[SQL STATEMENT]: SELECT * from t_float WHERE id = 1.1e0;
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
id

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 107
[SQL STATEMENT]: SELECT * from t_float WHERE id = '1.1';
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
Operator '=' with parameters [FLOAT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 108
[SQL STATEMENT]: SELECT * from t_float WHERE id = '1.1e0';
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
Operator '=' with parameters [FLOAT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 111
[SQL STATEMENT]: SELECT * from t_float WHERE id IN ('1.1', '2.2');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [FLOAT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 112
[SQL STATEMENT]: SELECT * from t_float WHERE id IN ('1.1e0', '2.2e0');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [FLOAT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 115
[SQL STATEMENT]: SELECT * from t_float WHERE id BETWEEN '1.1' AND '1.9';
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
Operator '>=' with parameters [FLOAT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 116
[SQL STATEMENT]: SELECT * from t_float WHERE id BETWEEN '1.1e0' AND '1.9e0';
[EXPECT RESULT]:
id
1.1
[ACTUAL RESULT]:
Operator '>=' with parameters [FLOAT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 120
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) BETWEEN 0 and 0.9;
[EXPECT RESULT]:
a
0
0.8
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 121
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)=0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/float.test
[ROW    NUMBER]: 122
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in (0.8,0.9);
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 60
[SQL STATEMENT]: select * from t1 where int_col='4294960000';
[EXPECT RESULT]:
int_col
4294960000
[ACTUAL RESULT]:
Operator '=' with parameters [INT UNSIGNED VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 72
[SQL STATEMENT]: INSERT INTO t1 (id,a) VALUES
(1,0),
(2,CAST(0x7FFFFFFF AS UNSIGNED)),
(3,CAST(0x80000000 AS UNSIGNED)),
(4,CAST(0xFFFFFFFF AS UNSIGNED));
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Function expression in INSERT statement value list will be supported in future version. for column 'a' at row 1

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 75
[SQL STATEMENT]: select * from t1 where ((a = 4294967295) and (b = '4294967295')) order by 1 desc, 2 asc;
[EXPECT RESULT]:
id	a	b
4	4294967295	4294967295
[ACTUAL RESULT]:
id	a	b

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 85
[SQL STATEMENT]: SELECT * from t_int WHERE id = '1.1';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [INT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 86
[SQL STATEMENT]: SELECT * from t_int WHERE id = '1.1e0';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [INT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 89
[SQL STATEMENT]: SELECT * from t_int WHERE id IN ('1.1', '2.2');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [INT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 90
[SQL STATEMENT]: SELECT * from t_int WHERE id IN ('1.1e0', '2.2e0');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [INT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 93
[SQL STATEMENT]: SELECT * from t_int WHERE id BETWEEN '1.1' AND '1.9';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [INT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 94
[SQL STATEMENT]: SELECT * from t_int WHERE id BETWEEN '1.1e0' AND '1.9e0';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [INT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 98
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) BETWEEN 0 and 0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 99
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)=0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/int.test
[ROW    NUMBER]: 100
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in (0.8,0.9);
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 68
[SQL STATEMENT]: select * from t1 where smallint_col='65500';
[EXPECT RESULT]:
smallint_col
65500
[ACTUAL RESULT]:
Operator '=' with parameters [SMALLINT UNSIGNED VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 82
[SQL STATEMENT]: INSERT INTO t1 (id,a) VALUES
(1,0),
(2,CAST(0x7FFF AS UNSIGNED)),
(3,CAST(0x8000 AS UNSIGNED)),
(4,CAST(0xFFFF AS UNSIGNED));
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Function expression in INSERT statement value list will be supported in future version. for column 'a' at row 1

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 85
[SQL STATEMENT]: select * from t1 where ((a = 65535) and (b = '65535')) order by 1 desc, 2 asc;
[EXPECT RESULT]:
id	a	b
4	65535	65535
[ACTUAL RESULT]:
id	a	b

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 95
[SQL STATEMENT]: SELECT * from t_smallint WHERE id = '1.1';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [SMALLINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 96
[SQL STATEMENT]: SELECT * from t_smallint WHERE id = '1.1e0';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [SMALLINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 99
[SQL STATEMENT]: SELECT * from t_smallint WHERE id IN ('1.1', '2.2');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [SMALLINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 100
[SQL STATEMENT]: SELECT * from t_smallint WHERE id IN ('1.1e0', '2.2e0');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [SMALLINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 103
[SQL STATEMENT]: SELECT * from t_smallint WHERE id BETWEEN '1.1' AND '1.9';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [SMALLINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 104
[SQL STATEMENT]: SELECT * from t_smallint WHERE id BETWEEN '1.1e0' AND '1.9e0';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [SMALLINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 108
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) BETWEEN 0 and 0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 109
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)=0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/smallint.test
[ROW    NUMBER]: 110
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in (0.8,0.9);
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 11
[SQL STATEMENT]: select * from t1 where a='2022-01-02';
[EXPECT RESULT]:
a
2022-01-02 00:00:00
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 12
[SQL STATEMENT]: select * from t1 where a>20220102;
[EXPECT RESULT]:
a
2022-01-02 00:00:01
2022-01-02 00:00:02
[ACTUAL RESULT]:
Operator '>' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 13
[SQL STATEMENT]: select * from t1 where a!='2022-01-02';
[EXPECT RESULT]:
a
2020-01-01 00:00:00
2022-01-02 00:00:01
2022-01-02 00:00:02
[ACTUAL RESULT]:
Operator '<>' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 15
[SQL STATEMENT]: update t1 set a=DATE_ADD(a ,INTERVAL 1 WEEK) where a>'20220102';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '>' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 16
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a
2020-01-01 00:00:00
2022-01-02 00:00:00
2022-01-09 00:00:01
2022-01-09 00:00:02
[ACTUAL RESULT]:
a
2020-01-01 00:00:00
2022-01-02 00:00:00
2022-01-02 00:00:01
2022-01-02 00:00:02

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 20
[SQL STATEMENT]: insert into t1 (big) values ('20220103'),('2022-01-01'),('2022-01-01 00:00:01'),('2022-01-02 00:00.00.000050');
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Incorrect TIMESTAMP value: '2022-01-02 00:00.00.000050' for column 'big' at row 3

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 21
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	big
1	2022-01-01 00:00:00.0000
1	2022-01-01 00:00:01.0000
1	2022-01-02 00:00:00.0001
1	2022-01-03 00:00:00.0000
[ACTUAL RESULT]:
a	big

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 22
[SQL STATEMENT]: select * from t1 order by big limit 1,3;
[EXPECT RESULT]:
a	big
1	2022-01-01 00:00:01.0000
1	2022-01-02 00:00:00.0001
1	2022-01-03 00:00:00.0000
[ACTUAL RESULT]:
a	big

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 23
[SQL STATEMENT]: select * from t1 order by big limit 3 offset 1;
[EXPECT RESULT]:
a	big
1	2022-01-01 00:00:01.0000
1	2022-01-02 00:00:00.0001
1	2022-01-03 00:00:00.0000
[ACTUAL RESULT]:
a	big

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 24
[SQL STATEMENT]: select min(big),max(big),max(big)-1 from t1 group by a;
[EXPECT RESULT]:
min(big)	max(big)	max(big)-1
2022-01-01 00:00:00.0000	2022-01-03 00:00:00.0000	20220102999999.0000
[ACTUAL RESULT]:
Operator '-' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 29
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
id	a
2022-01-31 00:00:00.000001	1
[ACTUAL RESULT]:
id	a
2022-01-31 00:00:00.000001000	1

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 49
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
dt	value32
2022-01-01 00:00:00.000050	1
2022-01-01 00:00:00.000500	2
2022-01-01 00:00:00.005000	3
[ACTUAL RESULT]:
dt	value32
2022-01-01 00:00:00.000050000	1
2022-01-01 00:00:00.000500000	2
2022-01-01 00:00:00.005000000	3

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 50
[SQL STATEMENT]: select * from t2;
[EXPECT RESULT]:
dt	value32
2022-01-01 00:00:00.001	5
2022-01-01 00:00:00.005	4
[ACTUAL RESULT]:
dt	value32
2022-01-01 00:00:00.005000000	4
2022-01-01 00:00:00.001000000	5

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 51
[SQL STATEMENT]: select * from t1 join t2 on t1.dt=t2.dt order by 1 desc, t2.dt asc;
[EXPECT RESULT]:
dt	value32	dt	value32
2022-01-01 00:00:00.005000	3	2022-01-01 00:00:00.005	4
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP TIMESTAMP] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 52
[SQL STATEMENT]: select * from t1 join t2 on t1.dt=t2.dt where t1.value32<>t2.value32;
[EXPECT RESULT]:
dt	value32	dt	value32
2022-01-01 00:00:00.005000	3	2022-01-01 00:00:00.005	4
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP TIMESTAMP] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 59
[SQL STATEMENT]: SELECT id, id >= 20200102 FROM t_timestamp;
[EXPECT RESULT]:
id	id >= 20200102
2020-01-01 23:59:59.999999	false	
2022-01-02 00:00:00.000000	true
[ACTUAL RESULT]:
Operator '>=' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 60
[SQL STATEMENT]: SELECT id, id = 202020101 FROM t_timestamp;
[EXPECT RESULT]:
id	id = 202020101
2020-01-01 23:59:59.999999	false	
2022-01-02 00:00:00.000000	false
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 61
[SQL STATEMENT]: SELECT id, 20200101 = id FROM t_timestamp;
[EXPECT RESULT]:
id	20200101 = id
2020-01-01 23:59:59.999999	false	
2022-01-02 00:00:00.000000	false
[ACTUAL RESULT]:
Operator '=' with parameters [BIGINT TIMESTAMP] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 62
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id = 20200102;
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 63
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id = 2.0200102e7;
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 64
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id = '20200102';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 65
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id IN ('2020-01-01','2022-01-02');
[EXPECT RESULT]:
id
2022-01-02 00:00:00.000000
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 66
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id IN (2.0200101e7,2.0200102e7 );
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 67
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id IN ('20220101', 20220102);
[EXPECT RESULT]:
id
2022-01-02 00:00:00.000000
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 68
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id IN ('2.0200101e7','2.0200102e7');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 69
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id BETWEEN 20191231 AND 20200101;
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 70
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id BETWEEN 2.0200101e7 and 2.0200102e7;
[EXPECT RESULT]:
id
2020-01-01 23:59:59.999999
[ACTUAL RESULT]:
Operator '>=' with parameters [TIMESTAMP DOUBLE] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 71
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id BETWEEN '2020-01-01' AND '2020-01-02';
[EXPECT RESULT]:
id
2020-01-01 23:59:59.999999
[ACTUAL RESULT]:
Operator '>=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 72
[SQL STATEMENT]: SELECT * from t_timestamp WHERE id BETWEEN '2022-01-01 00:00:00' AND '2022-01-02 00:00:00.000000';
[EXPECT RESULT]:
id
2022-01-02 00:00:00.000000
[ACTUAL RESULT]:
Operator '>=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 76
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) not BETWEEN '2022-02-28' and '2022-03-01';
[EXPECT RESULT]:
a
2022-03-01 00:00:01.000100
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 77
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)!=20220301;
[EXPECT RESULT]:
a
2022-03-01 00:00:01.000100
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 78
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in ('2022-03-01','2022-03-01 00:00:00.0001');
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 90
[SQL STATEMENT]: update t1 set a='2022-01-02' where a='2022-01-01 00:00:00' limit 1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 91
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:00:00	1
2022-01-01 00:00:00	2
[ACTUAL RESULT]:
a	b
2022-01-01 00:00:00	1
2022-01-01 00:00:00	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 93
[SQL STATEMENT]: update t1 set a='2022-01-02' where a='2022-01-01 00:00:00';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 94
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:00:00	1
2022-01-02 00:00:00	2
2022-01-02 00:00:00	3
[ACTUAL RESULT]:
a	b
2022-01-01 00:00:00	1
2022-01-01 00:00:00	2
2022-01-01 00:00:00	3

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 103
[SQL STATEMENT]: update t1 set a=a+101;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 104
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:01:01	2000-01-01 00:00:00.0000
2022-01-04 00:01:01	2000-01-01 00:00:00.0000
2022-01-06 00:01:01	2000-01-01 00:00:00.0000
2022-01-08 00:01:01	2000-01-01 00:00:00.0000
2022-01-10 01:02:02	2000-01-01 00:00:00.0000
2022-01-12 00:01:01	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 105
[SQL STATEMENT]: update t1 set a='2022-01-27 12:12:12.0001' where a='2022-01-08 00:01:01';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 106
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:01:01	2000-01-01 00:00:00.0000
2022-01-04 00:01:01	2000-01-01 00:00:00.0000
2022-01-06 00:01:01	2000-01-01 00:00:00.0000
2022-01-10 01:02:02	2000-01-01 00:00:00.0000
2022-01-12 00:01:01	2000-01-01 00:00:00.0000
2022-01-27 12:12:12	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 107
[SQL STATEMENT]: update t1 set a=a-1 where 1 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '-' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 108
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:01:01	2000-01-01 00:00:00.0000
2022-01-04 00:01:01	2000-01-01 00:00:00.0000
2022-01-06 00:01:01	2000-01-01 00:00:00.0000
2022-01-10 01:02:02	2000-01-01 00:00:00.0000
2022-01-12 00:01:01	2000-01-01 00:00:00.0000
2022-01-27 12:12:12	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 109
[SQL STATEMENT]: update t1 set a=a-1 where 3 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '-' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 110
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:01:00	2000-01-01 00:00:00.0000
2022-01-04 00:01:00	2000-01-01 00:00:00.0000
2022-01-06 00:01:00	2000-01-01 00:00:00.0000
2022-01-10 01:02:01	2000-01-01 00:00:00.0000
2022-01-12 00:01:00	2000-01-01 00:00:00.0000
2022-01-27 12:12:11	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 128
[SQL STATEMENT]: delete from t1 where a='2022-01-01 00:00:00' limit 1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 129
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
2022-01-01 00:00:00	2
[ACTUAL RESULT]:
a	b
2022-01-01 00:00:00	1
2022-01-01 00:00:00	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 131
[SQL STATEMENT]: delete from t1 where a='2022-01-01';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 132
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
[ACTUAL RESULT]:
a	b
2022-01-01 00:00:00	1
2022-01-01 00:00:00	2
2022-01-01 00:00:00	3

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 140
[SQL STATEMENT]: delete from t1 where a=20220101+3;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [TIMESTAMP BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 141
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00.0000
2022-01-06 00:00:00	2000-01-01 00:00:00.0000
2022-01-08 00:00:00	2000-01-01 00:00:00.0000
2022-01-10 01:01:01	2000-01-01 00:00:00.0000
2022-01-12 00:00:00	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/timestamp.test
[ROW    NUMBER]: 143
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00.0000
2022-01-06 00:00:00	2000-01-01 00:00:00.0000
2022-01-08 00:00:00	2000-01-01 00:00:00.0000
2022-01-10 01:01:01	2000-01-01 00:00:00.0000
2022-01-12 00:00:00	2000-01-01 00:00:00.0000
[ACTUAL RESULT]:
a	b
2022-01-02 00:00:00	2000-01-01 00:00:00
2022-01-04 00:00:00	2000-01-01 00:00:00
2022-01-06 00:00:00	2000-01-01 00:00:00
2022-01-08 00:00:00	2000-01-01 00:00:00
2022-01-10 01:01:01	2000-01-01 00:00:00
2022-01-12 00:00:00	2000-01-01 00:00:00

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 68
[SQL STATEMENT]: select * from t1 where tinyint_col='250';
[EXPECT RESULT]:
tinyint_col
250
[ACTUAL RESULT]:
Operator '=' with parameters [TINYINT UNSIGNED VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 82
[SQL STATEMENT]: INSERT INTO t1 (id,a) VALUES
(1,0),
(2,CAST(0x7F AS UNSIGNED)),
(3,CAST(0x80 AS UNSIGNED)),
(4,CAST(0xFF AS UNSIGNED));
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Function expression in INSERT statement value list will be supported in future version. for column 'a' at row 1

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 85
[SQL STATEMENT]: select * from t1 where ((a = 255) and (b = '255')) order by 1 desc, 2 asc;
[EXPECT RESULT]:
id	a	b
4	255	255
[ACTUAL RESULT]:
id	a	b

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 95
[SQL STATEMENT]: SELECT * from t_tinyint WHERE id = '1.1';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TINYINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 96
[SQL STATEMENT]: SELECT * from t_tinyint WHERE id = '1.1e0';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TINYINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 99
[SQL STATEMENT]: SELECT * from t_tinyint WHERE id IN ('1.1', '2.2');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TINYINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 100
[SQL STATEMENT]: SELECT * from t_tinyint WHERE id IN ('1.1e0', '2.2e0');
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '=' with parameters [TINYINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 103
[SQL STATEMENT]: SELECT * from t_tinyint WHERE id BETWEEN '1.1' AND '1.9';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [TINYINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 104
[SQL STATEMENT]: SELECT * from t_tinyint WHERE id BETWEEN '1.1e0' AND '1.9e0';
[EXPECT RESULT]:
id
[ACTUAL RESULT]:
Operator '>=' with parameters [TINYINT VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 108
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) BETWEEN 0 and 0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 109
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a)=0.9;
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 110
[SQL STATEMENT]: SELECT * FROM t1 WHERE coalesce(a) in (0.8,0.9);
[EXPECT RESULT]:
a
[ACTUAL RESULT]:
Function or operator 'coalesce' will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/tinyint.test
[ROW    NUMBER]: 126
[SQL STATEMENT]: SELECT 0 <= 127;
[EXPECT RESULT]:
0 <= 127
ture
[ACTUAL RESULT]:
0 <= 127
true

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 16
[SQL STATEMENT]: select * from t1 where a like 'ab\_def';
[EXPECT RESULT]:
a
ab_def
[ACTUAL RESULT]:
a
abcdef
ab_def

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 18
[SQL STATEMENT]: select * from t1 where a like "\__cdef";
[EXPECT RESULT]:
a
_bcdef
[ACTUAL RESULT]:
a
abcdef
_bcdef
a_cdef

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 19
[SQL STATEMENT]: select * from t1 where a not like "%d_\_";
[EXPECT RESULT]:
a
abcdef
_bcdef
a_cdef
ab_def
abc_ef
abcd_f
[ACTUAL RESULT]:
a
abc_ef

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 36
[SQL STATEMENT]: select concat_ws(LastName,FirstName) from Demovarchar where Age > 40 order by 1 asc;
[EXPECT RESULT]:
concat_ws(LastName,FirstName)
JohnsonDavid
MartinKelly
TamburelloAndrea
[ACTUAL RESULT]:
concat_ws(lastname, firstname)
Andrea
David
Kelly

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 37
[SQL STATEMENT]: select concat_ws(LastName,FirstName) as fullname from Demovarchar where Age > 40 order by fullname desc;
[EXPECT RESULT]:
fullname
TamburelloAndrea
MartinKelly
JohnsonDavid
[ACTUAL RESULT]:
fullname
Kelly
David
Andrea

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 38
[SQL STATEMENT]: select concat_ws(LastName,FirstName),Gender,Age from Demovarchar where Gender='F' order by Age asc;
[EXPECT RESULT]:
concat_ws(LastName,FirstName)	Gender	Age
PolandCarole	F	29
RapierAbigail	F	38
TamburelloAndrea	F	45
MartinKelly	F	54
[ACTUAL RESULT]:
concat_ws(lastname, firstname)	gender	age
Carole	F	29
Abigail	F	38
Andrea	F	45
Kelly	F	54

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 39
[SQL STATEMENT]: select cast(Age as char) as cAge from Demovarchar where cast(Age as char) like '2_';
[EXPECT RESULT]:
cAge
29
27
[ACTUAL RESULT]:
cage

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 40
[SQL STATEMENT]: select cast(Age as char) and Age as cAge from Demovarchar where Age>=50 order by cAge desc;
[EXPECT RESULT]:
cAge
1
1
[ACTUAL RESULT]:
Operator 'and' with parameters [CHAR INT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 79
[SQL STATEMENT]: select avg(officeCode) from employees where jobTitle like 'Sales%' group by jobTitle;
[EXPECT RESULT]:
avg(officeCode)
6
1
3.6666666666666665
[ACTUAL RESULT]:
Function 'avg' with parameters [VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 81
[SQL STATEMENT]: select employeeNumber,officeCode,reportsTo from employees where employeeNumber>1400 and reportsTo is not null order by officeCode+1,employeeNumber;
[EXPECT RESULT]:
employeeNumber	officeCode	reportsTo
1401	4	1102
1611	6	1088
1501	7	1102
1504	7	1102
[ACTUAL RESULT]:
Operator '+' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 99
[SQL STATEMENT]: select e.jobTitle,sum(jobid) from employees e join job j on e.jobTitle=j.jobTitle group by jobTitle having sum(jobid)>5;
[EXPECT RESULT]:
jobTitle	sum(jobid)
Sales Manager (NA)	6
Sales Rep	84
[ACTUAL RESULT]:
Column reference 'jobtitle' is ambiguous

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 100
[SQL STATEMENT]: select e.jobTitle,sum(jobid) from employees e join job j on e.jobTitle=j.jobTitle group by jobTitle having sum(jobid)>5 order by 2 desc;
[EXPECT RESULT]:
jobTitle	sum(jobid)
Sales Rep	84
Sales Manager (NA)	6
[ACTUAL RESULT]:
Column reference 'jobtitle' is ambiguous

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 132
[SQL STATEMENT]: update t1 set a=a+'101';
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 133
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
103	0
105	0
107	0
109	0
111	0
113	0
115	0
117	0
119	0
121	0
123	0
124	0
125	0
127	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 135
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
103	0
105	0
107	0
109	0
111	0
113	0
115	0
117	0
119	0
121	0
123	0
124	0
125	0
127	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 136
[SQL STATEMENT]: update t1 set a=a+'a' where 1 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 137
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
103	0
105	0
107	0
109	0
111	0
113	0
115	0
117	0
119	0
121	0
123	0
124	0
125	0
127	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 138
[SQL STATEMENT]: update t1 set a=a+a where 3 > 2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '+' with parameters [VARCHAR VARCHAR] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 139
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
206	0
210	0
214	0
218	0
222	0
226	0
230	0
234	0
238	0
242	0
246	0
248	0
250	0
254	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 157
[SQL STATEMENT]: delete from t1 where a=1 limit 1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 158
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
1	2
[ACTUAL RESULT]:
a	b
1	1
1	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 159
[SQL STATEMENT]: INSERT INTO t1 VALUES (1,3);
[EXPECT RESULT]:

[ACTUAL RESULT]:
Data truncation: Incorrect VARCHAR value: '1' for column 'a' at row 0

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 160
[SQL STATEMENT]: delete from t1 where a=1;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 161
[SQL STATEMENT]: select * from t1;
[EXPECT RESULT]:
a	b
[ACTUAL RESULT]:
a	b
1	1
1	2

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 178
[SQL STATEMENT]: delete from t1 where a=2+2;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 179
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
10	0
12	0
14	0
16	0
18	0
2	0
20	0
22	0
23	0
24	0
26	0
6	0
8	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 180
[SQL STATEMENT]: delete from t1 where  a=24;
[EXPECT RESULT]:

[ACTUAL RESULT]:
Operator '=' with parameters [VARCHAR BIGINT] will be implemented in future version.

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 181
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
10	0
12	0
14	0
16	0
18	0
2	0
20	0
22	0
23	0
26	0
6	0
8	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

[ERROR]
[SCRIPT   FILE]: cases/dtype/varchar.test
[ROW    NUMBER]: 183
[SQL STATEMENT]: select a,b from t1;
[EXPECT RESULT]:
a	b
10	0
12	0
14	0
16	0
18	0
2	0
20	0
22	0
23	0
26	0
6	0
8	0
[ACTUAL RESULT]:
a	b
2	0
4	0
6	0
8	0
10	0
12	0
14	0
16	0
18	0
20	0
22	0
24	0
26	0
23	0

